<?php

/**
 * @file
 * Bugzilla Bridge
 */

/**
 * Implements hook_boot().
 */
function bugzilla_boot() {
  bzCookie();   
} 

/**
 * Implements hook_user_update().
 */
function bugzilla_user_update(&$edit, $account, $category) {
  /* check if email hasn't changed */
  if ($account->original->mail != $account->mail || $account->original->name != $account->name ) {

    $bz_vars = _bz_read_config();

    if (!empty($bz_vars)) {
      $bz_database = array(
	'database' => $bz_vars['db_name'],
	'username' => $bz_vars['db_user'],
	'password' => $bz_vars['db_pass'],
	'host' => $bz_vars['db_host'], 
	'driver' => $bz_vars['db_driver'], 
      );

      Database::addConnectionInfo('bugs', 'default', $bz_database);
      db_set_active('bugs');

      db_update('profiles')
	->fields(array(
	  'login_name' => $account->mail,
	  'realname' => $account->name
	))
	->condition('login_name', $account->original->mail)
	->execute();

      db_set_active();

    }

  }

}

/**
 * Implements permission().
 */
function bugzilla_permission() {
  return array(
   'admin'=> array('title' => t('Administrators'),
   ),
	'tweakparams'=> array('title' => t('Can change Parameters'),
   ),
	'editusers'=> array('title' => t('Can edit or disable users'),
   ),
	'creategroups'=> array('title' => t('Can create and destroy groups'),
   ),
	'editclassifications'=> array('title' => t('Can create, destroy, and edit classifications'),
   ),
	'editcomponents'=> array('title' => t('Can create, destroy, and edit components'),
   ),
	'editkeywords'=> array('title' => t('Can create, destroy, and edit keywords'),
   ),
	'editbugs'=> array('title' => t('Can edit all bug fields'),
   ),
	'canconfirm'=> array('title' => t('Can confirm a bug or mark it a duplicate'),
   ),
	'bz_canusewhineatothers'=> array('title' => t('Can configure whine reports for other users'),
   ),
	'bz_canusewhines'=> array('title' => t('User can configure whine reports for self'),
   ),
	'bz_sudoers'=> array('title' => t('Can perform actions as other users'),
   ),
	'bz_sudo_protect'=> array('title' => t('Can not be impersonated by other users'),
   ),
  );
}

/*
 * Import Bugzilla config
 */
function _bz_read_config() {
  $bz_vars = array();
  $str = file_get_contents(DRUPAL_ROOT.'/../../www.reactos.org_config/bugzilla-config');

  if (strlen($str) > 0) {

    $str = explode("\n", $str);
    foreach ($str as $line) {
      $line = trim($line);
      if ($line[0] === '$' && strpos($line, '=') !== false) {
	$var_expl = explode('=', $line, 2);
	$bz_vars[trim($var_expl[0],'$ ')] = trim($var_expl[1], "; '");
      }
    }
  }

  return $bz_vars;
} 

/**
 * Sets a cookie to be read by Bugzilla
 */
function bzCookie() {
  drupal_load('module', 'user');
    
  global $user;
  
  /* load external configuration */
  include_once(DRUPAL_ROOT.'/../../www.reactos.org_config/drupal-bz-config.php');
  if (empty($session_name))
	$session_name='roscmskey';
	
  if (!empty($user->name)) {
    $vl = $_COOKIE[session_name()];
    setcookie($session_name, $vl, REQUEST_TIME + 600, '/');
  }
  else {
    setcookie($session_name, NULL);
    setcookie('Bugzilla_login', NULL);
    setcookie('Bugzilla_logincookie', NULL);
  }
    
}
